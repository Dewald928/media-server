version: "2.1"

services:
  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - WEBUI_PORT=8090
    volumes:
      - $ROOT_DIR/config/qbt:/config
      - ${ROOT_DIR}/torrents:/downloads
    ports:
      - 8090:8090
      - 6881:6881
      - 6881:6881/udp
    networks:
      arr:
        ipv4_address: 172.19.0.5
    restart: unless-stopped

  prowlarr: #indexer manager for Sonarr & Radarr
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $ROOT_DIR/config/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    networks:
      arr:
        ipv4_address: 172.19.0.6

  radarr: #movie search agent
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=022
    volumes:
      - $ROOT_DIR/config/radarr:/config
      - $ROOT_DIR:/data
    ports:
      - 7878:7878
    restart: unless-stopped
    networks:
      arr:
        ipv4_address: 172.19.0.2

  sonarr: #TV show search agent
    image: linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=022
    volumes:
      - $ROOT_DIR/config/sonarr:/config
      - $ROOT_DIR:/data
    ports:
      - 8989:8989
    restart: unless-stopped
    networks:
      arr:
        ipv4_address: 172.19.0.3

  readarr: #book search agent
    container_name: readarr
    image: linuxserver/readarr:develop
    ports:
      - 8787:8787
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=022
    volumes:
      - $ROOT_DIR/config/readarr:/config
      - $ROOT_DIR:/data
    restart: unless-stopped
    networks:
      arr:
        ipv4_address: 172.19.0.4

networks:
  arr:
    name: arr
    # external: true # Use an existing network called "arr" if it exists, otherwise create it
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "false"
    ipam:
      config:
        - subnet: "172.19.0.0/16" # Replace with your desired subnet
